kind: Deployment
apiVersion: apps/v1
metadata:
  name: health-all
  labels:
    app.kubernetes.io/name: 'health-all'
    app.kubernetes.io/part-of: 'health-checks'
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: health-all
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 'health-all'
        app.kubernetes.io/part-of: 'health-checks'
    spec:
      containers:
      - name: health-all
        image: health-all:1.0.0
        imagePullPolicy: Always
        env:
        - name: ASPNETCORE_URLS
          value: 'http://*:8004'
        - name: PORT
          value: '8004'
        - name: SERVICE__HEALTH-ALL__PROTOCOL
          value: 'http'
        - name: SERVICE__HEALTH-ALL__PORT
          value: '8004'
        - name: SERVICE__HEALTH-ALL__HOST
          value: 'health-all'
        ports:
        - containerPort: 8004
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8004
            scheme: HTTP
            httpHeaders:
            - name: name1
              value: value1
            - name: name2
              value: value2
          initialDelaySeconds: 5
          periodSeconds: 1
          successThreshold: 1
          failureThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8004
            scheme: HTTP
            httpHeaders:
            - name: name3
              value: value3
            - name: name4
              value: value4
          initialDelaySeconds: 5
          periodSeconds: 1
          successThreshold: 1
          failureThreshold: 1
...
---
kind: Service
apiVersion: v1
metadata:
  name: health-all
  labels:
    app.kubernetes.io/name: 'health-all'
    app.kubernetes.io/part-of: 'health-checks'
spec:
  selector:
    app.kubernetes.io/name: health-all
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 8004
    targetPort: 8004
...
