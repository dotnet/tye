@page "/services/{ServiceName}"
@inject Application application
@inject HttpClient Http

@if (Service == null)
{
    <span>Unknown service @ServiceName</span>
}
else
{
    <h3>@Service.Description.Name</h3>

    @if (_service?.Replicas != null) {
        if (_service.Replicas.Any()) {
            <button @onclick="OnServiceStop" class="btn btn-danger">Stop</button>
        } else {
            <button @onclick="OnServiceStart" class="btn btn-success">Start</button>
        }
    }

    switch (Service.ServiceType)
    {
        case ServiceType.Container:
            break;
        case ServiceType.Executable:
            break;
        case ServiceType.Project:
            break;
    }

    <hr />

    <MetricsDisplay Service="_service" />
}

@code {
    private Service? _service;

    [Parameter]
    public string ServiceName { get; set; } = default!;

    public Service? Service => _service;

    protected override void OnInitialized()
    {
        application.Services.TryGetValue(ServiceName, out _service);
    }

    private async Task OnServiceStop()
    {        
        await Http.PostAsync($"/api/v1/services/{ServiceName}/stop", null);
    }

    private async Task OnServiceStart()
    {
        await Http.PostAsync($"/api/v1/services/{ServiceName}/start", null);
    }
}